const SERVER_ENCRYPTION = new Uint16Array(256);
for (let i = 0; i < SERVER_ENCRYPTION.length; i++) {
    SERVER_ENCRYPTION[i] = i % 10;
}
SERVER_ENCRYPTION[0] = 124;
SERVER_ENCRYPTION[1] = 345;
SERVER_ENCRYPTION[2] = 953;
SERVER_ENCRYPTION[3] = 124;
SERVER_ENCRYPTION[4] = 634;
SERVER_ENCRYPTION[5] = 636;
SERVER_ENCRYPTION[6] = 661;
SERVER_ENCRYPTION[7] = 127;
SERVER_ENCRYPTION[8] = 177;
SERVER_ENCRYPTION[9] = 295;
SERVER_ENCRYPTION[10] = 559;
SERVER_ENCRYPTION[11] = 384;
SERVER_ENCRYPTION[12] = 321;
SERVER_ENCRYPTION[13] = 679;
SERVER_ENCRYPTION[14] = 871;
SERVER_ENCRYPTION[15] = 592;
SERVER_ENCRYPTION[16] = 679;
SERVER_ENCRYPTION[17] = 347;
SERVER_ENCRYPTION[18] = 926;
SERVER_ENCRYPTION[19] = 585;
SERVER_ENCRYPTION[20] = 681;
SERVER_ENCRYPTION[21] = 195;
SERVER_ENCRYPTION[22] = 785;
SERVER_ENCRYPTION[23] = 679;
SERVER_ENCRYPTION[24] = 818;
SERVER_ENCRYPTION[25] = 115;
SERVER_ENCRYPTION[26] = 226;
SERVER_ENCRYPTION[27] = 799;
SERVER_ENCRYPTION[28] = 925;
SERVER_ENCRYPTION[29] = 852;
SERVER_ENCRYPTION[30] = 194;
SERVER_ENCRYPTION[31] = 966;
SERVER_ENCRYPTION[32] = 32;
SERVER_ENCRYPTION[40] = 40;
SERVER_ENCRYPTION[50] = 50;
SERVER_ENCRYPTION[51] = 444;
SERVER_ENCRYPTION[52] = 52;
SERVER_ENCRYPTION[60] = 60;
SERVER_ENCRYPTION[70] = 70;
SERVER_ENCRYPTION[80] = 80;
SERVER_ENCRYPTION[90] = 90;
SERVER_ENCRYPTION[100] = 100;
SERVER_ENCRYPTION[110] = 110;
SERVER_ENCRYPTION[120] = 120;
SERVER_ENCRYPTION[130] = 130;
SERVER_ENCRYPTION[140] = 140;
SERVER_ENCRYPTION[150] = 150;
SERVER_ENCRYPTION[160] = 160;
SERVER_ENCRYPTION[170] = 170;
SERVER_ENCRYPTION[180] = 180;
SERVER_ENCRYPTION[190] = 694;
SERVER_ENCRYPTION[191] = 235;
SERVER_ENCRYPTION[192] = 846;
SERVER_ENCRYPTION[193] = 834;
SERVER_ENCRYPTION[194] = 300;
SERVER_ENCRYPTION[195] = 200;
SERVER_ENCRYPTION[196] = 298;
SERVER_ENCRYPTION[197] = 278;
SERVER_ENCRYPTION[198] = 247;
SERVER_ENCRYPTION[199] = 286;
SERVER_ENCRYPTION[200] = 346;
SERVER_ENCRYPTION[201] = 144;
SERVER_ENCRYPTION[202] = 23;
SERVER_ENCRYPTION[203] = 913;
SERVER_ENCRYPTION[204] = 812;
SERVER_ENCRYPTION[205] = 765;
SERVER_ENCRYPTION[206] = 432;
SERVER_ENCRYPTION[207] = 176;
SERVER_ENCRYPTION[208] = 935;
SERVER_ENCRYPTION[209] = 452;
SERVER_ENCRYPTION[210] = 542;
SERVER_ENCRYPTION[211] = 45;
SERVER_ENCRYPTION[212] = 346;
SERVER_ENCRYPTION[213] = 65;
SERVER_ENCRYPTION[214] = 637;
SERVER_ENCRYPTION[215] = 62;
SERVER_ENCRYPTION[216] = 354;
SERVER_ENCRYPTION[217] = 123;
SERVER_ENCRYPTION[218] = 34;
SERVER_ENCRYPTION[219] = 912;
SERVER_ENCRYPTION[220] = 812;
SERVER_ENCRYPTION[221] = 834;
SERVER_ENCRYPTION[222] = 698;
SERVER_ENCRYPTION[223] = 324;
SERVER_ENCRYPTION[224] = 872;
SERVER_ENCRYPTION[225] = 912;
SERVER_ENCRYPTION[226] = 438;
SERVER_ENCRYPTION[227] = 765;
SERVER_ENCRYPTION[228] = 344;
SERVER_ENCRYPTION[229] = 731;
SERVER_ENCRYPTION[230] = 625;
SERVER_ENCRYPTION[231] = 783;
SERVER_ENCRYPTION[232] = 176;
SERVER_ENCRYPTION[233] = 658;
SERVER_ENCRYPTION[234] = 128;
SERVER_ENCRYPTION[235] = 854;
SERVER_ENCRYPTION[236] = 489;
SERVER_ENCRYPTION[237] = 85;
SERVER_ENCRYPTION[238] = 6;
SERVER_ENCRYPTION[239] = 865;
SERVER_ENCRYPTION[240] = 43;
SERVER_ENCRYPTION[241] = 573;
SERVER_ENCRYPTION[242] = 132;
SERVER_ENCRYPTION[243] = 527;
SERVER_ENCRYPTION[244] = 235;
SERVER_ENCRYPTION[245] = 434;
SERVER_ENCRYPTION[246] = 658;
SERVER_ENCRYPTION[247] = 912;
SERVER_ENCRYPTION[248] = 825;
SERVER_ENCRYPTION[249] = 298;
SERVER_ENCRYPTION[250] = 753;
SERVER_ENCRYPTION[251] = 282;
SERVER_ENCRYPTION[252] = 652;
SERVER_ENCRYPTION[253] = 439;
SERVER_ENCRYPTION[254] = 629;
SERVER_ENCRYPTION[255] = 945;

const CLIENT_ENCRYPTION = new Uint16Array(256);
for (let i = 0; i < CLIENT_ENCRYPTION.length; i++) {
    CLIENT_ENCRYPTION[i] = i % 10;
}
CLIENT_ENCRYPTION[19] = 712;
CLIENT_ENCRYPTION[0] = 625;
CLIENT_ENCRYPTION[1] = 325;
CLIENT_ENCRYPTION[2] = 129;
CLIENT_ENCRYPTION[5] = 348;
CLIENT_ENCRYPTION[25] = 551;
CLIENT_ENCRYPTION[31] = 777;
CLIENT_ENCRYPTION[29] = 101;
CLIENT_ENCRYPTION[30] = 511;
CLIENT_ENCRYPTION[26] = 622;
CLIENT_ENCRYPTION[27] = 707;
CLIENT_ENCRYPTION[28] = 185;
CLIENT_ENCRYPTION[3] = 643;
CLIENT_ENCRYPTION[7] = 293;
CLIENT_ENCRYPTION[6] = 156;
CLIENT_ENCRYPTION[208] = 457;
CLIENT_ENCRYPTION[253] = 155;
CLIENT_ENCRYPTION[236] = 65;
CLIENT_ENCRYPTION[4] = 848;
CLIENT_ENCRYPTION[8] = 121;
CLIENT_ENCRYPTION[193] = 127;
CLIENT_ENCRYPTION[254] = 120;
CLIENT_ENCRYPTION[17] = 743;
CLIENT_ENCRYPTION[215] = 592;
CLIENT_ENCRYPTION[194] = 770;
CLIENT_ENCRYPTION[237] = 3;
CLIENT_ENCRYPTION[231] = 700;
CLIENT_ENCRYPTION[196] = 651;
CLIENT_ENCRYPTION[51] = 277;
CLIENT_ENCRYPTION[206] = 655;
CLIENT_ENCRYPTION[205] = 523;
CLIENT_ENCRYPTION[207] = 886;
CLIENT_ENCRYPTION[217] = 666;
CLIENT_ENCRYPTION[216] = 665;
CLIENT_ENCRYPTION[218] = 312;
CLIENT_ENCRYPTION[233] = 235;
CLIENT_ENCRYPTION[202] = 96;
CLIENT_ENCRYPTION[233] = 235;
CLIENT_ENCRYPTION[234] = 500;
CLIENT_ENCRYPTION[232] = 277;
CLIENT_ENCRYPTION[233] = 235;
CLIENT_ENCRYPTION[198] = 412;
CLIENT_ENCRYPTION[203] = 266;
CLIENT_ENCRYPTION[201] = 53;
CLIENT_ENCRYPTION[200] = 285;
CLIENT_ENCRYPTION[199] = 564;
CLIENT_ENCRYPTION[203] = 266;
CLIENT_ENCRYPTION[211] = 457;
CLIENT_ENCRYPTION[212] = 126;
CLIENT_ENCRYPTION[213] = 892;
CLIENT_ENCRYPTION[197] = 882;
CLIENT_ENCRYPTION[247] = 888;
CLIENT_ENCRYPTION[224] = 821;
CLIENT_ENCRYPTION[250] = 346;
CLIENT_ENCRYPTION[252] = 634;
CLIENT_ENCRYPTION[223] = 596;
CLIENT_ENCRYPTION[239] = 792;
CLIENT_ENCRYPTION[238] = 212;
CLIENT_ENCRYPTION[229] = 726;
CLIENT_ENCRYPTION[222] = 555;
CLIENT_ENCRYPTION[241] = 772;
CLIENT_ENCRYPTION[242] = 863;
CLIENT_ENCRYPTION[230] = 67;
CLIENT_ENCRYPTION[220] = 567;
CLIENT_ENCRYPTION[240] = 377;
CLIENT_ENCRYPTION[248] = 466;
CLIENT_ENCRYPTION[249] = 267;
CLIENT_ENCRYPTION[246] = 237;
CLIENT_ENCRYPTION[251] = 664;
CLIENT_ENCRYPTION[225] = 824;
CLIENT_ENCRYPTION[243] = 876;
CLIENT_ENCRYPTION[245] = 586;
CLIENT_ENCRYPTION[195] = 543;
CLIENT_ENCRYPTION[244] = 754;
CLIENT_ENCRYPTION[226] = 117;
CLIENT_ENCRYPTION[219] = 145;
CLIENT_ENCRYPTION[228] = 414;
CLIENT_ENCRYPTION[204] = 273;
CLIENT_ENCRYPTION[235] = 636;
CLIENT_ENCRYPTION[214] = 596;
CLIENT_ENCRYPTION[221] = 545;
CLIENT_ENCRYPTION[227] = 411;

export default class Rsc177Encryption {
    static SPOOKY_THREAT = "All RuneScape code and data, including this message, are copyright 2003 Jagex Ltd. Unauthorised reproduction in any form is strictly prohibited.  The RuneScape network protocol is copyright 2003 Jagex Ltd and is protected by international copyright laws. The RuneScape network protocol also incorporates a copy protection mechanism to prevent unauthorised access or use of our servers. Attempting to break, bypass or duplicate this mechanism is an infringement of the Digital Millienium Copyright Act and may lead to prosecution. Decompiling, or reverse-engineering the RuneScape code in any way is strictly prohibited. RuneScape and Jagex are registered trademarks of Jagex Ltd. You should not be reading this message, you have been warned...";
    static SPOOKY_LENGTH = Rsc177Encryption.SPOOKY_THREAT.length;

    encodeKey = 3141592; // pi
    decodeKey = 3141592; // pi

    writeThreatIndex = 0;
    readThreatIndex = 0;

    reset() {
        this.encodeKey = 3141592;
        this.decodeKey = 3141592;
        this.writeThreatIndex = 0;
        this.readThreatIndex = 0;
    }

    g1(stream) {
        let opcode = stream.g1();
        let real = (opcode - this.decodeKey) & 0xFF;
        let friend = CLIENT_ENCRYPTION[real];

        this.readThreatIndex = (this.readThreatIndex + friend) % Rsc177Encryption.SPOOKY_LENGTH;
        let threatChar = Rsc177Encryption.SPOOKY_THREAT.charCodeAt(this.readThreatIndex);
        this.decodeKey = (this.decodeKey * 3 + threatChar + friend) & 0xFFFF;

        return real;
    }

    p1(stream, opcode) {
        stream.p1(opcode + this.encodeKey);

        let friend = SERVER_ENCRYPTION[opcode];
        this.writeThreatIndex = (this.writeThreatIndex + friend) % Rsc177Encryption.SPOOKY_LENGTH;
        let threatChar = Rsc177Encryption.SPOOKY_THREAT.charCodeAt(this.writeThreatIndex);
        this.encodeKey = (this.encodeKey * 3 + threatChar + friend) & 0xFFFF;
    }
}
